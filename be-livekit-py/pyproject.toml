[project]
name = "be-livekit-py"
version = "0.1.0"
description = "AI Voice Agent with LiveKit"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "livekit-agents[bey,google,openai]>=1.2.1",
    "livekit-plugins-noise-cancellation>=0.2.5",
    "python-dotenv>=1.1.1",
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pyright>=1.1.403",
    "ruff>=0.12.4",
]

[tool.uv]
package = true

[project.scripts]
simple = "agents.simple_agent:app"
multi = "agents.multi_agent:app"

[tool.pyright]
venvPath = "."
venv = ".venv"

pythonVersion = "3.13"
typeCheckingMode = "strict"

include = ["src"]
exclude = [
  "**/node_modules",
  "**/__pycache__",
  ".venv",
]

reportMissingImports = true         # catch imports that can’t be resolved :contentReference[oaicite:4]{index=4}
reportUnusedImport = true           # flag unused imports :contentReference[oaicite:5]{index=5}
reportUnusedVariable = true         # flag unused locals/vars :contentReference[oaicite:6]{index=6}
reportOptionalMemberAccess = true   # catch obj.foo when foo could be None
reportOptionalSubscript = true      # catch x[“key”] when x could be None
reportOptionalCall = true           # catch f() when f could be None
reportMissingParameterType = true   # catch missing type annotations for function parameters
reportUnknownMemberType = false     # catch missing type annotations for members
reportUnknownVariableType = false   # catch missing type annotations for variables
